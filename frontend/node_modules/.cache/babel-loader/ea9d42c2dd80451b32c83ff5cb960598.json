{"ast":null,"code":"var _jsxFileName = \"/home/orestis/Desktop/GitHubRep/MyCloud/frontend/src/Files.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Copyright() {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    children: ['Copyright Â© ', /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://material-ui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), ' ', new Date().getFullYear(), '.']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Copyright;\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nexport default function Files() {\n  _s();\n\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState({});\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [currentPath, setCurrentPath] = useState(useParams().path);\n  const [fileUploading, setFileUploading] = useState(false);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [createDir, setCreateDir] = useState(false);\n  const [newDirInfo, setNewDirInfo] = useState({\n    dirName: '',\n    path: useParams().path\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [directoryEntries, setDirectoryEntries] = useState([]);\n  let history = useHistory();\n\n  const changeHandler = event => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n  };\n\n  const handleSubmission = () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('path', currentPath);\n    setFileUploading(true);\n    fetch('http://localhost:8080/v1/MyCloud/upload', {\n      method: 'POST',\n      mode: \"cors\",\n      credentials: \"include\",\n      body: formData\n    }).then(response => response.json()).then(result => {\n      console.log('Success:', result);\n      setFileUploading(false);\n      setFileUploaded(true);\n      setDirectoryEntries([...directoryEntries, result.newFile]);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setIsFilePicked(false);\n  };\n\n  const handleLogout = () => {\n    fetch('http://localhost:8080/v1/MyCloud/logout', {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n        /*\"Origin\":\"http://localhost:3000\"*/\n\n      }\n    }).then(response => response.json()).then(json => console.log(json)).catch(err => console.log('Request Failed', err));\n    history.push(\"/\");\n  };\n\n  const listDirectory = async () => {\n    const data = {\n      path: currentPath\n    };\n    const response = await fetch('http://localhost:8080/v1/MyCloud/listDir', {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n        /*\"Origin\":\"http://localhost:3000\"*/\n\n      }\n    });\n    const jsonResponse = await response.json();\n\n    if (response.status === 202) {\n      console.log(jsonResponse.dirEntries);\n      setDirectoryEntries(jsonResponse.dirEntries);\n    } else {\n      console.log(jsonResponse.error);\n    }\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setNewDirInfo({ ...newDirInfo,\n      [name]: value\n    });\n  };\n\n  const handleNewDirSubmit = e => {\n    e.preventDefault();\n    console.log(newDirInfo);\n    fetch('http://localhost:8080/v1/MyCloud/createDir', {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      body: JSON.stringify(newDirInfo),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n        /*\"Origin\":\"http://localhost:3000\"*/\n\n      }\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n\n      if (json.error) {\n        setErrorMessage(json.error);\n      } else {\n        setCreateDir(false);\n        setDirectoryEntries([...directoryEntries, json.newDirectory]);\n      }\n    });\n  };\n\n  function handleBreadcrumb(event) {\n    event.preventDefault();\n    var targetDir = event.target.text;\n    var n = currentPath.indexOf(targetDir);\n    var targetPath = currentPath.substr(0, n + targetDir.length);\n    setCurrentPath(targetPath);\n    history.push(`${targetPath}`);\n  }\n\n  useEffect(() => {\n    listDirectory();\n  }, [currentPath]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(ExitToAppIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.heroContent,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h2\",\n            align: \"center\",\n            color: \"textPrimary\",\n            gutterBottom: true,\n            children: \"My Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            color: \"textSecondary\",\n            paragraph: true,\n            children: [\"Current Directory:\", currentPath, /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n              \"aria-label\": \"breadcrumb\",\n              align: \"inherit\",\n              children: currentPath.split(\"_\").map(dirEntry => /*#__PURE__*/_jsxDEV(Link, {\n                color: \"inherit\",\n                href: \"/\",\n                align: \"inherit\",\n                onClick: handleBreadcrumb,\n                children: dirEntry\n              }, dirEntry, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.heroButtons,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  color: \"primary\",\n                  className: classes.button,\n                  children: [\"Choose a file to upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    name: \"file\",\n                    hidden: true,\n                    onChange: changeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => setCreateDir(true),\n                  children: \"Create a directory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), createDir && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.paper,\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: classes.form,\n                  noValidate: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        autoComplete: \"fname\",\n                        name: \"dirName\",\n                        variant: \"outlined\",\n                        required: true,\n                        fullWidth: true,\n                        id: \"dirName\",\n                        label: \"Directory Name\",\n                        onChange: handleChange,\n                        autoFocus: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    fullWidth: true,\n                    variant: \"contained\",\n                    color: \"primary\",\n                    className: classes.submit,\n                    onClick: handleNewDirSubmit,\n                    children: \"Create Directory\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: () => setCreateDir(false),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n                  onClose: () => setErrorMessage(\"\"),\n                  severity: \"error\",\n                  children: errorMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), isFilePicked ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this), \"Filename: \", selectedFile.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  children: [\"Size in bytes: \", selectedFile.size]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.button,\n                  startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 34\n                  }, this),\n                  onClick: handleSubmission,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), fileUploading && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            children: \"File Uploading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 31\n          }, this), fileUploaded && /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setFileUploaded(false),\n            severity: \"success\",\n            children: \"File Uploaded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: directoryEntries.map(dirEntry => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.card,\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                style: {\n                  height: 50,\n                  paddingTop: '56%'\n                },\n                className: classes.cardMedia,\n                image: dirEntry.icon,\n                title: \"Image title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                className: classes.cardContent,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h6\",\n                  component: \"h2\",\n                  children: dirEntry.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  href: \"#\",\n                  className: classes.button,\n                  startIcon: /*#__PURE__*/_jsxDEV(CloudDownloadIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Open\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  className: classes.button,\n                  startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 34\n                  }, this),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)\n          }, dirEntry.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.footer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        align: \"center\",\n        color: \"textSecondary\",\n        component: \"p\",\n        children: \"Something here to give the footer a purpose!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Files, \"E98Ly+2mELcMIMcGGrtT7fdmGIg=\", false, function () {\n  return [useStyles, useParams, useParams, useHistory];\n});\n\n_c2 = Files;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"Files\");","map":{"version":3,"sources":["/home/orestis/Desktop/GitHubRep/MyCloud/frontend/src/Files.js"],"names":["React","useState","useEffect","AppBar","Button","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Toolbar","Typography","makeStyles","Container","Link","ExitToAppIcon","useParams","useHistory","CloudUploadIcon","DeleteIcon","CloudDownloadIcon","Alert","TextField","Breadcrumbs","Copyright","Date","getFullYear","useStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","Files","classes","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","currentPath","setCurrentPath","path","fileUploading","setFileUploading","fileUploaded","setFileUploaded","createDir","setCreateDir","newDirInfo","setNewDirInfo","dirName","errorMessage","setErrorMessage","directoryEntries","setDirectoryEntries","history","changeHandler","event","console","log","target","files","handleSubmission","formData","FormData","append","fetch","method","mode","credentials","body","then","response","json","result","newFile","catch","error","handleLogout","headers","err","push","listDirectory","data","JSON","stringify","jsonResponse","status","dirEntries","handleChange","e","name","value","handleNewDirSubmit","preventDefault","newDirectory","handleBreadcrumb","targetDir","text","n","indexOf","targetPath","substr","length","split","map","dirEntry","button","form","submit","size"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {useParams} from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\nexport default function Files() {\n  const classes = useStyles();\n  const [selectedFile, setSelectedFile] = useState({});\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [currentPath,setCurrentPath] = useState(useParams().path);\n  const [fileUploading,setFileUploading] = useState(false);\n  const [fileUploaded,setFileUploaded] = useState(false);\n  const [createDir,setCreateDir] = useState(false);\n  const [newDirInfo,setNewDirInfo] = useState({dirName:'',path:useParams().path})\n  const [errorMessage,setErrorMessage] = useState('')\n  const [directoryEntries,setDirectoryEntries] = useState([])\n  \n  let history = useHistory();\n\n  const changeHandler = (event) => {\n    console.log(event.target.files[0]);\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n  };\n\n  const handleSubmission = () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('path',currentPath);\n    setFileUploading(true);\n    fetch(\n      'http://localhost:8080/v1/MyCloud/upload',\n      {\n        method: 'POST',\n        mode:\"cors\",\n        credentials:\"include\",\n        body: formData,\n      }\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log('Success:', result);\n        setFileUploading(false);\n        setFileUploaded(true);\n        setDirectoryEntries([...directoryEntries,result.newFile])\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n      setIsFilePicked(false);\n  };\n\n\n  const handleLogout = () => {\n    fetch('http://localhost:8080/v1/MyCloud/logout',{\n    method: \"GET\",\n    mode:\"cors\",\n    credentials:\"include\",\n    headers: {\"Content-type\": \"application/json; charset=UTF-8\",/*\"Origin\":\"http://localhost:3000\"*/}\n    })\n    .then(response => response.json())\n    .then(json => console.log(json))\n    .catch(err => console.log('Request Failed',err))\n    history.push(\"/\")\n  }  \n\n  const listDirectory = async () => {\n    const data = {path:currentPath}\n    const response = await fetch('http://localhost:8080/v1/MyCloud/listDir',{\n      method: \"POST\",\n      mode:\"cors\",\n      credentials:\"include\",\n      body: JSON.stringify(data),\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\",/*\"Origin\":\"http://localhost:3000\"*/}\n      });\n    const jsonResponse = await response.json()\n    if (response.status === 202) {\n      console.log(jsonResponse.dirEntries)\n      setDirectoryEntries(jsonResponse.dirEntries)\n    }else{\n      console.log(jsonResponse.error)\n    }\n  }\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setNewDirInfo({ ...newDirInfo, [name]: value });\n  };  \n\n  const handleNewDirSubmit = (e) => {\n    e.preventDefault();\n    console.log(newDirInfo);\n    fetch('http://localhost:8080/v1/MyCloud/createDir', {\n      method: \"POST\",\n      mode:\"cors\",\n      credentials:\"include\",\n      body: JSON.stringify(newDirInfo),\n      headers: {\"Content-type\": \"application/json; charset=UTF-8\",/*\"Origin\":\"http://localhost:3000\"*/}\n    })\n    .then(response => response.json())\n    .then((json) => {\n      console.log(json);\n      if(json.error){\n        setErrorMessage(json.error);\n      }else{\n        setCreateDir(false)\n        setDirectoryEntries([...directoryEntries,json.newDirectory])\n      }\n    });\n  }\n\n  function handleBreadcrumb(event) {\n    event.preventDefault();\n    var targetDir = event.target.text;\n    var n = currentPath.indexOf(targetDir);\n    var targetPath = currentPath.substr(0, n+targetDir.length)\n    setCurrentPath(targetPath);\n    history.push(`${targetPath}`);\n  }\n\n  useEffect(() => {\n    listDirectory();\n  }, [currentPath]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <ExitToAppIcon />\n          <Button onClick={handleLogout}>\n            Logout\n        </Button>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              My Files\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Current Directory:{currentPath}\n              <Breadcrumbs aria-label=\"breadcrumb\" align=\"inherit\">\n              {currentPath.split(\"_\").map((dirEntry) => (\n                      <Link key={dirEntry} color=\"inherit\" href=\"/\" align=\"inherit\" onClick={handleBreadcrumb}>\n                      {dirEntry}\n                    </Link>\n              ))}\n              </Breadcrumbs>\n            </Typography>\n           \n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button\n                    variant=\"contained\"\n                    component=\"label\"\n                    color=\"primary\"\n                    className={classes.button}\n                  >Choose a file to upload\n                <input type=\"file\" name=\"file\" hidden onChange={changeHandler} />\n                </Button>\n                </Grid>\n\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={() => setCreateDir(true)}>\n                    Create a directory\n                  </Button>\n                </Grid>\n                {createDir &&\n                      <div className={classes.paper}>\n                        <br></br>\n                      <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <TextField\n                              autoComplete=\"fname\"\n                              name=\"dirName\"\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"dirName\"\n                              label=\"Directory Name\"\n                              onChange={handleChange}\n                              autoFocus\n                            />\n                          </Grid>\n                        </Grid>\n                        <Button\n                          type=\"submit\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.submit}\n                          onClick={handleNewDirSubmit}\n                        >\n                          Create Directory\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => setCreateDir(false)}>\n                          Cancel\n                        </Button>\n                      </form>\n                      {errorMessage && <Alert onClose={() => setErrorMessage(\"\")} severity=\"error\">{errorMessage}</Alert>}\n                    </div>\n                }\n              </Grid>\n\n              {isFilePicked ? (\n                  <React.Fragment>\n                    <Grid item>\n                      <Typography variant=\"h6\" gutterBottom>\n                        <br></br>Filename: {selectedFile.name}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"h6\" gutterBottom>\n                        Size in bytes: {selectedFile.size}\n                      </Typography>\n                    </Grid>\n                    <Grid item> \n                      <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<CloudUploadIcon />}\n                      onClick={handleSubmission}\n                      >\n                      Upload\n                      </Button>\n                    </Grid>\n                  </React.Fragment>\n\n                ) : (\n                  <p></p>\n                )}\n\n            </div>\n            {fileUploading && <Alert severity=\"info\">File Uploading</Alert>}\n            {fileUploaded && <Alert onClose={() => setFileUploaded(false)} severity=\"success\">File Uploaded</Alert>}\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {directoryEntries.map((dirEntry) => (\n              <Grid item key={dirEntry.name} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    style = {{ height: 50, paddingTop: '56%'}}\n                    className={classes.cardMedia}\n                    image={dirEntry.icon}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                      {dirEntry.name}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      href=\"#\"\n                      className={classes.button}\n                      startIcon={<CloudDownloadIcon />}\n                    >\n                      Open\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className={classes.button}\n                      startIcon={<DeleteIcon />}\n                    >\n                      Delete\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}